;D: main
;D: {
;D: int
;R: modificadores_acceso: 
;R: tipo: TOK_INT
;R: clase_escalar: tipo
;R: clase: clase_escalar
;D: x
;R: identificador: TOK_IDENTIFICADOR
;D: ,
;D: y
;R: identificador: TOK_IDENTIFICADOR
;D: ,
;D: i
;R: identificador: TOK_IDENTIFICADOR
;D: ,
;D: resultado
;R: identificador: TOK_IDENTIFICADOR
;D: ;
;R: identificadores: TOK_IDENTIFICADOR
;R: identificadores: TOK_IDENTIFICADOR ',' identificadores
;R: identificadores: TOK_IDENTIFICADOR ',' identificadores
;R: identificadores: TOK_IDENTIFICADOR ',' identificadores
;R: declaracion: modificadores_acceso clase identificadores ';'
;D: scanf
;R: declaraciones: declaracion
;R: funciones: 
;D: x
;D: ;
;R: lectura: TOK_SCANF TOK_IDENTIFICADOR
;R: sentencia_simple: lectura
;R: sentencia: sentencia_simple ';'
;D: scanf
;D: y
;D: ;
;R: lectura: TOK_SCANF TOK_IDENTIFICADOR
;R: sentencia_simple: lectura
;R: sentencia: sentencia_simple ';'
;D: resultado
;D: =
;D: 0
;R: constante_entera: TOK_CONSTANTE_ENTERA
;R: constante: constante_entera
;R: exp: constante
;D: ;
;R: asignacion:  TOK_IDENTIFICADOR '=' exp
;R: sentencia_simple: asignacion
;R: sentencia: sentencia_simple ';'
;D: i
;D: =
;D: 0
;R: constante_entera: TOK_CONSTANTE_ENTERA
;R: constante: constante_entera
;R: exp: constante
;D: ;
;R: asignacion:  TOK_IDENTIFICADOR '=' exp
;R: sentencia_simple: asignacion
;R: sentencia: sentencia_simple ';'
;D: while
;D: (
;D: (
;D: i
;D: <
;D: y
;D: )
;R: comparacion: exp '<' exp
;R: exp: '(' comparacion ')'
;D: )
;D: {
;D: resultado
;D: =
;D: resultado
;D: +
;D: x
;D: ;
;R: exp: exp '+' exp
;R: asignacion:  TOK_IDENTIFICADOR '=' exp
;R: sentencia_simple: asignacion
;R: sentencia: sentencia_simple ';'
;D: i
;D: =
;D: i
;D: +
;D: 1
;R: constante_entera: TOK_CONSTANTE_ENTERA
;R: constante: constante_entera
;R: exp: constante
;D: ;
;R: exp: exp '+' exp
;R: asignacion:  TOK_IDENTIFICADOR '=' exp
;R: sentencia_simple: asignacion
;R: sentencia: sentencia_simple ';'
;D: }
;R: sentencias: sentencia
;R: sentencias: sentencia sentencias
;R: bucle: TOK_WHILE '(' exp ')' '{' sentencias '}'
;R: bloque: bucle
;R: sentencia: bloque
;D: printf
;D: resultado
;D: ;
;R: escritura: TOK_PRINTF exp
;R: sentencia_simple: escritura
;R: sentencia: sentencia_simple ';'
;D: }
;R: sentencias: sentencia
;R: sentencias: sentencia sentencias
;R: sentencias: sentencia sentencias
;R: sentencias: sentencia sentencias
;R: sentencias: sentencia sentencias
;R: sentencias: sentencia sentencias
;R: programa: TOK_MAIN '{' declaraciones funciones sentencias '}'
